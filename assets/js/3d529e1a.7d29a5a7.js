"use strict";(self.webpackChunkmgod=self.webpackChunkmgod||[]).push([[781],{6956:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var o=t(5893),i=t(1151);const s={title:"Basic Usage"},r=void 0,d={id:"basic_usage",title:"Basic Usage",description:"Use existing MongoDB connection, or setup a new one to register a default database connection.",source:"@site/../docs/basic_usage.md",sourceDirName:".",slug:"/basic_usage",permalink:"/mgod/docs/basic_usage",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Basic Usage"},sidebar:"docsSidebar",previous:{title:"Installation",permalink:"/mgod/docs/installation"},next:{title:"Schema Options",permalink:"/mgod/docs/schema_options"}},c={},a=[{value:"Inserting a new document",id:"inserting-a-new-document",level:2},{value:"Finding documents using model properties",id:"finding-documents-using-model-properties",level:2},{value:"Updating document properties",id:"updating-document-properties",level:2},{value:"Removing documents matching certain or all model properties",id:"removing-documents-matching-certain-or-all-model-properties",level:2}];function l(e){const n={admonition:"admonition",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Use existing MongoDB connection, or setup a new one to register a default database connection."}),"\n",(0,o.jsx)(n.p,{children:"For existing database connection,"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'import "github.com/Lyearn/mgod"\n\nfunc init() {\n\t// client is the MongoDB client obtained using Go Mongo Driver\'s Connect method.\n\tmgod.SetDefaultClient(client)\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"To setup a new connection,"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'import (\n\t"time"\n\n\t"github.com/Lyearn/mgod"\n\t"go.mongodb.org/mongo-driver/mongo/options"\n)\n\nfunc init() {\n\t// `cfg` is optional. Can rely on default configurations by providing `nil` value in argument.\n\tcfg := &mgod.ConnectionConfig{Timeout: 5 * time.Second}\n\topts := options.Client().ApplyURI("mongodb://root:mgod123@localhost:27017")\n\n\terr := mgod.ConfigureDefaultClient(cfg, opts)\n}\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["The above ",(0,o.jsx)(n.code,{children:"err"})," variable will be a connection error (if occurs) returned by the Go Mongo Driver. So, handle the error accordingly."]})}),"\n",(0,o.jsxs)(n.p,{children:["Add tags ",(0,o.jsx)(n.em,{children:"(wherever applicable)"})," in existing struct ",(0,o.jsx)(n.em,{children:"(or define a new model)"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'type User struct {\n\tName     string\n\tEmailID  string `bson:"emailId"`\n\tAge      *int32 `bson:",omitempty"`\n\tJoinedOn string `bson:"joinedOn" mgoType:"date"`\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Use ",(0,o.jsx)(n.code,{children:"mgod"})," to get the entity ODM."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'import (\n\t"github.com/Lyearn/mgod"\n\t"github.com/Lyearn/mgod/schema/schemaopt"\n)\n\nmodel := User{}\ndbName := "mgoddb"\ncollection := "users"\n\nschemaOpts := schemaopt.SchemaOptions{\n\tTimestamps: true,\n}\n\nopts := mgod.NewEntityMongoModelOptions(dbName, collection, &schemaOpts)\nuserModel, _ := mgod.NewEntityMongoModel(model, *opts)\n'})}),"\n",(0,o.jsx)(n.p,{children:"Use the entity ODM to perform CRUD operations with ease."}),"\n",(0,o.jsx)(n.h2,{id:"inserting-a-new-document",children:"Inserting a new document"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'joinedOn, _ := dateformatter.New(time.Now()).GetISOString()\nuserDoc := User{\n\tName: "Gopher",\n\tEmailID: "gopher@mgod.com",\n\tJoinedOn: joinedOn,\n}\nuser, _ := userModel.InsertOne(context.TODO(), userDoc)\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Output:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'{\n\t"_id": ObjectId("65697705d4cbed00e8aba717"),\n\t"name": "Gopher",\n\t"emailId": "gopher@mgod.com",\n\t"joinedOn": ISODate("2023-12-01T11:32:19.290Z"),\n\t"createdAt": ISODate("2023-12-01T11:32:19.290Z"),\n\t"updatedAt": ISODate("2023-12-01T11:32:19.290Z"),\n\t"__v": 0\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Notice how ",(0,o.jsx)(n.code,{children:"_id"}),", ",(0,o.jsx)(n.code,{children:"createdAt"}),", ",(0,o.jsx)(n.code,{children:"updatedAt"})," and ",(0,o.jsx)(n.code,{children:"__v"})," fields are added automatically."]}),"\n",(0,o.jsx)(n.h2,{id:"finding-documents-using-model-properties",children:"Finding documents using model properties"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'users, _ := userModel.Find(context.TODO(), bson.M{"name": userDoc.Name})\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Output:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'[]User{\n\tUser{\n\t\tName: "Gopher",\n\t\tEmailID: "gopher@mgod.com",\n\t\tJoinedOn: "2023-12-01T11:32:19.290Z",\n\t}\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"updating-document-properties",children:"Updating document properties"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'result, _ := userModel.UpdateMany(context.TODO(), bson.M{"joinedOn": bson.M{"$gte": "2023-12-01T00:00:00.000Z"}}, bson.M{"$inc": {"__v": 1}})\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Output:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:"mongo.UpdateResult{\n\tMatchedCount: 1,\n\tModifiedCount: 1,\n\tUpsertedCount: 0,\n}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'// User Doc\n{\n\t"_id": ObjectId("65697705d4cbed00e8aba717"),\n\t"name": "Gopher",\n\t"emailId": "gopher@mgod.com",\n\t"joinedOn": ISODate("2023-12-01T11:32:19.290Z"),\n\t"createdAt": ISODate("2023-12-01T11:32:19.290Z"),\n\t"updatedAt": ISODate("2023-12-02T10:40:00.670Z"),\n\t"__v": 1\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Notice the updation of the ",(0,o.jsx)(n.code,{children:"updatedAt"})," field."]}),"\n",(0,o.jsx)(n.h2,{id:"removing-documents-matching-certain-or-all-model-properties",children:"Removing documents matching certain or all model properties"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'result, _ := userModel.DeleteMany(context.TODO(), bson.M{"name": userDoc.Name})\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Output:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:"mongo.DeleteResult{\n\tDeletedCount: 1\n}\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>r});var o=t(7294);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);